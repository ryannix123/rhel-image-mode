# group_vars/all.yml - Main configuration variables
---
# Azure Authentication (use environment variables or Azure CLI)
azure_subscription_id: "your-subscription-id"
azure_resource_group: "rg-rhel-imagemode-prod"
azure_location: "eastus"

# Quay.io Registry Configuration  
quay_registry_url: "quay.io"
quay_namespace: "your-quay-namespace"  # Your Quay.io organization/username
quay_username: "{{ vault_quay_username }}"  # Store in Ansible Vault
quay_password: "{{ vault_quay_password }}"  # Store in Ansible Vault

# Bootc Container Image Configuration
base_bootc_image: "registry.redhat.io/rhel9/rhel-bootc:latest"
container_image_name: "rhel-image-mode"
container_image_tag: "azure"

# RHEL Image Configuration
rhel_sku: "9_5"
rhel_version: "9.5.2024120516"
vm_size: "Standard_D2s_v3"
vm_admin_username: "core"
ssh_public_key_path: "~/.ssh/id_rsa.pub"

# Network Configuration
vnet_name: "prod-vnet"
subnet_name: "prod-subnet"
nsg_name: "prod-nsg"

# Target VMs for deployment and conversion to image mode
target_vm_list:
  - name: "web-server-01"
    size: "Standard_D2s_v3"
    disk_size: 64
    environment: "production"
    vnet: "prod-vnet"
    subnet: "web-subnet"
    nsg: "web-nsg"
    public_ip: "Static"
  
  - name: "web-server-02"
    size: "Standard_D2s_v3"
    disk_size: 64
    environment: "production"
    vnet: "prod-vnet"
    subnet: "web-subnet"
    nsg: "web-nsg"
    public_ip: "Static"
  
  - name: "app-server-01"
    size: "Standard_D4s_v3"
    disk_size: 128
    environment: "production"
    vnet: "prod-vnet"
    subnet: "app-subnet"
    nsg: "app-nsg"
    public_ip: "None"

---
# inventory/hosts.yml - Ansible inventory
all:
  children:
    azure_vms:
      hosts:
        localhost:
          ansible_connection: local
          ansible_python_interpreter: "{{ ansible_playbook_python }}"
      vars:
        # Azure collection requirements
        ansible_python_interpreter: python3

---
# requirements.yml - Required Ansible collections
collections:
  - name: azure.azcollection
    version: ">=2.0.0"
  - name: containers.podman
    version: ">=1.10.0"
  - name: community.general
    version: ">=6.0.0"
  - name: ansible.posix
    version: ">=1.4.0"

---
# ansible.cfg - Ansible configuration
[defaults]
inventory = inventory/hosts.yml
host_key_checking = False
retry_files_enabled = False
gathering = smart
fact_caching = memory
stdout_callback = yaml
bin_ansible_callbacks = True

[inventory]
enable_plugins = host_list, script, auto, yaml, ini, toml

[ssh_connection]
ssh_args = -o ControlMaster=auto -o ControlPersist=60s -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
pipelining = True